[project]
name = "omnisummary"
version = "0.1.0"
description = "AI-powered content summarization agent using Strands Agents and AWS Bedrock"
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.13.1",
    "aws-cdk-lib>=2.220.0",
    "aws-cdk.aws-lambda-python-alpha>=2.220.0a0",
    "aws-lambda-powertools>=2.30.0",
    "beautifulsoup4>=4.14.2",
    "bedrock-agentcore>=1.0.4",
    "bedrock-agentcore-starter-toolkit>=0.1.26",
    "boto3>=1.40.58",
    "constructs>=10.4.2",
    "httpx>=0.28.1",
    "langchain>=0.3.27,<1.0.0",
    "langchain-aws>=0.2.35,<1.0.0",
    "langchain-core>=0.3.78,<1.0.0",
    "pdfminer.six>=20250506",
    "pillow>=11.3.0",
    "pydantic>=2.12.0",
    "pymupdf>=1.26.4",
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0.3",
    "slack-bolt>=1.18.0",
    "slack-sdk>=3.26.0",
    "strands-agents>=1.12.0",
    "strands-agents-tools>0.2.9",
    "tenacity>=9.1.2",
    "tiktoken>=0.12.0",
    "unstructured[pdf]>=0.18.15",
    "youtube-transcript-api>=1.2.2",
    "yt-dlp>=2025.10.22",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "mypy>=1.7.0",
    "ruff>=0.1.9",
]

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["agent*", "agent_runtime*", "shared*", "tools*"]
exclude = ["tests*", "infrastructure*", "scripts*", "lambda_handlers*"]

[tool.black]
line-length = 120
target-version = ["py312"]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    ".mypy_cache",
    ".venv",
    "venv",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
no_implicit_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=omnisummary --cov-report=term-missing"
